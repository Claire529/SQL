create table reader(
	number varchar(20) not null,
	passwd varchar(20) not null,
	name varchar(20) not null,
	sex enum('m','f') not null,
	primary key(number)
);

create table shop(
	number varchar(20) not null,
	name varchar(20) not null,
	title varchar(40),
	primary key(number)
);

create table book(
	ISBN varchar(20) not null,
	name varchar(30) not null,
	writer varchar(30) not null,
	publisher varchar(40) not null,
	time varchar(20) not null,
	class enum('a','b','c') not null,
	type enum('d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','i') not null,
	price float(6,2) not null,
	primary key(ISBN)
);

create table shop_book(
	shop varchar(20) not null,
	book varchar(20) not null,
	primary key(shop,book),
	foreign key(shop) references shop(number) on delete cascade on update cascade,
	foreign key(book) references book(ISBN) on delete cascade on update cascade
);

create table order_list(
	number varchar(20) not null,
	reader varchar(20) not null,
	state enum('payment','shipped','delivered') not null,
	amount float(6,2) not null,
	time varchar(20) not null,
	primary key(number),
	foreign key(reader) references reader(number) on delete cascade on update cascade
);

insert into reader(number,passwd,name,sex) values('13151175','123','john','m');
insert into reader(number,passwd,name,sex) values('13151176','456','max','f');

create temporary table cart13121175(
	book varchar(20) not null,
	shop varchar(20) not null,
	quantity int not null,
	primary key(book,shop)
);


	insert into cart13121175(book,shop,quantity) values('LF02','S01',2);
	insert into cart13121175(book,shop,quantity) values('TS03','S02',1);
	insert into cart13121175(book,shop,quantity) values('BA03','S01',1);

	create table order20150714201820(
		reader varchar(20) not null,
		book varchar(20) not null,
		shop varchar(20) not null,
		quantity int not null,
		primary key(book,shop), 
		foreign key(reader) references reader(number) on delete cascade on update cascade,
		foreign key(book) references book(ISBN) on delete cascade on update cascade,
		foreign key(shop) references shop(number) on delete cascade on update cascade
	);
	insert into order20150714201820(reader,book,shop,quantity) values('13121175','LF02','S01',2);
	insert into order20150714201820(reader,book,shop,quantity) values('13121175','TS03','S02',1);
	insert into order20150714201820(reader,book,shop,quantity) values('13121175','BA03','S01',1);

	set @temp = (select price from book where ISBN = 'LF02')*2+(select price from book where ISBN = 'TS03')+
	(select price from book where ISBN = 'BA03');

	insert into order_list(number,reader,state,amount,time)
	values('20150714201820','13121175','payment',@temp,'2015/07/14');

	select order20150714201820.reader,order20150714201820.book,order20150714201820.shop,order20150714201820.quantity,
	order_list.state,order_list.amount,order_list.number
	from order20150714201820 left join order_list on order_list.reader = order20150714201820.reader;
  
 
	update order_list set state = 'shipped' where number='20150714201820';
 
	update order_list set state = 'delivered' where number='20150714201820';
 
	select order20150714201820.reader,order20150714201820.book,order20150714201820.shop,order20150714201820.quantity,
	order_list.state,order_list.amount,order_list.number
	from order20150714201820 left join order_list on order_list.reader = order20150714201820.reader;
